# To allow your IDE to autocomplete and validate your YAML pipelines, name them as <name of your choice>.haystack-pipeline.yml

version: ignore

components:    # define all the building-blocks for Pipeline
  - name: DocumentStore
    type: ElasticsearchDocumentStore  # consider using MilvusDocumentStore or WeaviateDocumentStore for scaling to large number of documents
    params:
      host: localhost
      similarity: dot_product
      embedding_dim: 384 #128 #384
  - name: Retriever
    type: MultihopEmbeddingRetriever
    params:
      document_store: DocumentStore    # params can reference other components defined in the YAML
      top_k: 10
      embedding_model: sentence-transformers/all-MiniLM-L6-v2
      model_format: sentence_transformers
      scale_score: true
      # query_embedding_model: facebook/dpr-question_encoder-single-nq-base #vblagoje/dpr-question_encoder-single-lfqa-wiki 
      # passage_embedding_model: facebook/dpr-ctx_encoder-single-nq-base #vblagoje/dpr-ctx_encoder-single-lfqa-wiki #
      # sentence-transformers/all-MiniLM-L6-v2
      use_gpu: True
  - name: Reader       # custom-name for the component; helpful for visualization & debugging
    type: Seq2SeqGenerator    # Haystack Class name for the component
    params:
      model_name_or_path: vblagoje/bart_lfqa
      num_beams: 2
      use_gpu: True
  - name: TextFileConverter
    type: TextConverter
  - name: PDFFileConverter
    type: PDFToTextConverter
  - name: Preprocessor
    type: PreProcessor
    params:
      split_by: word
      split_length: 100
      split_overlap: 3
      split_respect_sentence_boundary: True
  - name: FileTypeClassifier
    type: FileTypeClassifier
    params:
      supported_types:
        - "pdf"
        - "json"

pipelines:
  - name: query    # a sample extractive-qa Pipeline
    nodes:
      - name: Retriever
        inputs: [Query]
      - name: Reader
        inputs: [Retriever]
  - name: indexing
    nodes:
      - name: FileTypeClassifier
        inputs: [File]
      - name: TextFileConverter
        inputs: [FileTypeClassifier.output_1]
      - name: PDFFileConverter
        inputs: [FileTypeClassifier.output_2]
      - name: Preprocessor
        inputs: [PDFFileConverter, TextFileConverter]
      - name: Retriever
        inputs: [Preprocessor]
      - name: DocumentStore
        inputs: [Retriever]
