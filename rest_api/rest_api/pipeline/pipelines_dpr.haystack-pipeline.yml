# To allow your IDE to autocomplete and validate your YAML pipelines, name them as <name of your choice>.haystack-pipeline.yml

version: ignore

components:    # define all the building-blocks for Pipeline
  - name: DocumentStore
    type: ElasticsearchDocumentStore  # consider using MilvusDocumentStore or WeaviateDocumentStore for scaling to large number of documents
    params:
      host: localhost
      similarity: dot_product
      embedding_dim: 768 #128 #384
  - name: Retriever
    type: EmbeddingRetriever
    params:
      document_store: DocumentStore    # params can reference other components defined in the YAML
      top_k: 10
      embedding_model: oliviamga2/multi-qa-mpnet-base-dot-v1_legal_finetune # sentence-transformers/multi-qa-mpnet-base-dot-v1
      model_format: sentence_transformers
      # use_auth_token: True
      use_gpu: True
  - name: Reader       # custom-name for the component; helpful for visualization & debugging
    type: FARMReader    # Haystack Class name for the component
    params:
      model_name_or_path: deepset/roberta-base-squad2  #deepset/minilm-uncased-squad2 ahotrod/albert_xxlargev1_squad2_512
      top_k: 5
      context_window_size: 1000
      # duplicate_filtering: 1
      return_no_answer: True
      use_gpu: True
  - name: TextFileConverter
    type: TextConverter 
  - name: PDFFileConverter
    type: PDFToTextConverter
  - name: Preprocessor
    type: PreProcessor
    params:
      clean_empty_lines: true
      clean_whitespace: true
      clean_header_footer: false
      split_by: word
      split_length: 200 # because max seq length for both retriever and reader used is 512, leaving room for expansion with tokens
      split_overlap: 6 # 3:100 ratio
      split_respect_sentence_boundary: true
  - name: FileTypeClassifier
    type: FileTypeClassifier
    params:
      supported_types:
        - "pdf"
        - "json"

pipelines:
  - name: query
    nodes:
      - name: Retriever
        inputs: [Query]
      - name: Reader
        inputs: [Retriever]
  - name: indexing
    nodes:
      - name: FileTypeClassifier
        inputs: [File]
      - name: TextFileConverter
        inputs: [FileTypeClassifier.output_1]
      - name: PDFFileConverter
        inputs: [FileTypeClassifier.output_2]
      - name: Preprocessor
        inputs: [PDFFileConverter, TextFileConverter]
      - name: Retriever
        inputs: [Preprocessor]
      - name: DocumentStore
        inputs: [Retriever]
